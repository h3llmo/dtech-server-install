require 'json'

blueprintF = File.read('blueprint.json')
settingsF = File.read('settings.json')

blueprint = JSON.parse(blueprintF)
settings = JSON.parse(settingsF)

# /!\ IMPORTANT: will be used in all template to reference all the deployed services
internalDomain = settings["internalDomain"]

# /!\ IMPORTANT: will be used as the stateful storage volume
storage = settings["storage"]


Vagrant.configure("2") do |config|    
    config.vm.synced_folder "../", "/media/dtech"
    config.vm.synced_folder storage, "/media/storage", mount_options: ["dmode=777", "fmode=666"]    
    config.vm.provision "shell", inline:"echo '10.0.2.3 " + internalDomain + "' | sudo tee -a /etc/hosts"

    blueprint["vms"].each do |blueprintVM|
        config.vm.define blueprintVM["name"] do |machine|            
            vmName = blueprintVM["name"]            
            vmSettings = settings[vmName];
            machine.vm.box = blueprintVM["box"]
            machine.vm.provider "virtualbox" do |v|
                memory = blueprintVM["memory"]
                cpus = blueprintVM["cpus"]
                size = blueprintVM["size"];
                v.name = vmName
                v.gui = false
                if cpus == "1"
                    v.customize ["modifyvm", :id, "--memory", memory, "--cpus", cpus]
                else
                    v.customize ["modifyvm", :id, "--memory", memory, "--cpus", cpus, "--ioapic", "on"]
                end
            end

            vmSettings["modules"].each do |mod|      
                if mod == "docker"
                    machine.vm.provision "shell", path: "../Files/COMMON_installDocker.sh"
                end 
                if mod == "nexus"
                    nexusAdminPassword = vmSettings["nexus"]["adminPassword"]
                    httpPort = vmSettings["nexus"]["httpPort"]
                    crPort = vmSettings["nexus"]["dockerPort"]
                    machine.vm.network :forwarded_port, guest: 8081, host: httpPort, auto_correct: true      
                    machine.vm.network :forwarded_port, guest: 1100, host: crPort, auto_correct: true      
                    machine.vm.provision "shell", path: "../Files/NEXUS_prepare.sh"
                end
                if mod == "jenkins"                    
                    nexusAdminPassword = "missingNexus"
                    httpPort = vmSettings["jenkins"]["httpPort"]
                    machine.vm.network :forwarded_port, guest: 8080, host: httpPort, auto_correct: true
                    vmSettings["modules"].each do |mod2| 
                        if mod2 == "nexus"
                            nexusAdminPassword = vmSettings["nexus"]["adminPassword"]
                        end                 
                    end 

                    machine.vm.network :forwarded_port, guest: 8080, host: httpPort, auto_correct: true      
                    machine.vm.provision "shell", path: "../Files/JENKINS_prepare.sh", 
                        args: [internalDomain,nexusAdminPassword,httpPort]

                end
                if mod == "microk8s"
                    crPort = 1100
                    httpPort = vmSettings["microk8s"]["httpPort"]

                    vmSettings["modules"].each do |mod2| 
                        if mod2 == "nexus"
                            crPort = vmSettings["nexus"]["dockerPort"]
                        end                 
                    end 

                    machine.vm.provision "shell", path: "../Files/KUBE_prepare.sh",
                        args: [internalDomain,crPort]

                    machine.vm.network :forwarded_port, guest: 10443, host: httpPort, auto_correct: true      
                end
            end            
        end        
    end
end
